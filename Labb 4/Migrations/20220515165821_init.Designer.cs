// <auto-generated />
using System;
using Labb_4.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Labb_4.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220515165821_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Labb_4.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<float>("BookRating")
                        .HasColumnType("real");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Andy Weir",
                            BookId = 10000,
                            BookRating = 8f,
                            Title = "Project Hail Mary"
                        },
                        new
                        {
                            Id = 2,
                            Author = "James Clear",
                            BookId = 10001,
                            BookRating = 7.5f,
                            Title = "Atomic Habits"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Donna Tartt",
                            BookId = 10002,
                            BookRating = 7f,
                            Title = "The Secret History"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Joe Abercrombie",
                            BookId = 10003,
                            BookRating = 8.35f,
                            Title = "The Blade Itself"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Graham Hancock",
                            BookId = 10004,
                            BookRating = 9.5f,
                            Title = "Fingerprints of the Gods"
                        });
                });

            modelBuilder.Entity("Labb_4.Models.BorrowedBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BeenReturned")
                        .HasColumnType("bit");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReturnTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("BorrowedBooks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BeenReturned = false,
                            BookId = 1,
                            CustomerId = 1,
                            ReturnTime = new DateTime(2022, 6, 15, 18, 58, 21, 622, DateTimeKind.Local).AddTicks(479)
                        },
                        new
                        {
                            Id = 2,
                            BeenReturned = false,
                            BookId = 2,
                            CustomerId = 1,
                            ReturnTime = new DateTime(2022, 6, 15, 18, 58, 21, 624, DateTimeKind.Local).AddTicks(1102)
                        },
                        new
                        {
                            Id = 3,
                            BeenReturned = false,
                            BookId = 3,
                            CustomerId = 1,
                            ReturnTime = new DateTime(2022, 6, 15, 18, 58, 21, 624, DateTimeKind.Local).AddTicks(1164)
                        });
                });

            modelBuilder.Entity("Labb_4.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Hejsanhoppsanstigen 13",
                            FirstName = "Adam",
                            LastName = "Adamsson",
                            PhoneNumber = "0709-123123"
                        },
                        new
                        {
                            Id = 2,
                            Adress = "Bamsegatan 37",
                            FirstName = "Bertil",
                            LastName = "Bertilsson"
                        },
                        new
                        {
                            Id = 3,
                            Adress = "Ajvarvägen 1",
                            FirstName = "Ceasar",
                            LastName = "Ceasarsson"
                        },
                        new
                        {
                            Id = 4,
                            Adress = "Väg 1",
                            FirstName = "David",
                            LastName = "Davidsson"
                        },
                        new
                        {
                            Id = 5,
                            Adress = "Skogstråket",
                            FirstName = "Erik",
                            LastName = "Eriksson"
                        });
                });

            modelBuilder.Entity("Labb_4.Models.BorrowedBook", b =>
                {
                    b.HasOne("Labb_4.Models.Book", "Book")
                        .WithMany("Borrows")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb_4.Models.Customer", "Customer")
                        .WithMany("BorrowedBooks")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
